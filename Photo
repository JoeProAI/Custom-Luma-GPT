openapi: 3.1.0
info:
  title: LumaLabs Image & Video Generation API
  version: 1.0.0
  description: API for generating and manipulating images and videos using LumaLabs' Dream Machine platform.
servers:
  - url: https://api.lumalabs.ai/dream-machine/v1
tags:
  - name: Generations
    description: Manage and retrieve generations.
  - name: Image Manipulation
    description: Generate and refine images with prompts, references, or modifications.
paths:
  /generations/image:
    post:
      tags:
        - Image Manipulation
      summary: Generate an image from a prompt
      operationId: generateImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateImageRequest'
      responses:
        '200':
          description: Image generation successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationResponse'
        '400':
          description: Invalid input.
        '500':
          description: Internal server error.

  /generations/video:
    post:
      tags:
        - Generations
      summary: Generate a video from a text prompt
      operationId: generateVideo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateVideoRequest'
      responses:
        '200':
          description: Video generation successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationResponse'
        '400':
          description: Invalid input.
        '500':
          description: Internal server error.

  /generations:
    get:
      tags:
        - Generations
      summary: List all generations
      operationId: listGenerations
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
            description: Maximum number of results to retrieve.
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            description: Number of results to skip.
      responses:
        '200':
          description: A list of generations.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenerationResponse'
        '500':
          description: Internal server error.

  /generations/{generationId}:
    get:
      tags:
        - Generations
      summary: Get the status of a specific generation
      operationId: getGenerationStatus
      parameters:
        - in: path
          name: generationId
          required: true
          schema:
            type: string
          description: The ID of the generation to retrieve.
      responses:
        '200':
          description: Generation status retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationResponse'
        '404':
          description: Generation not found.
        '500':
          description: Internal server error.

    delete:
      tags:
        - Generations
      summary: Delete a specific generation
      operationId: deleteGeneration
      parameters:
        - in: path
          name: generationId
          required: true
          schema:
            type: string
          description: The ID of the generation to delete.
      responses:
        '204':
          description: Generation deleted successfully.
        '404':
          description: Generation not found.
        '500':
          description: Internal server error.

components:
  schemas:
    GenerateImageRequest:
      type: object
      properties:
        prompt:
          type: string
          description: The description of the scene to generate.
        aspect_ratio:
          type: string
          description: The aspect ratio of the image.
          enum: ["1:1", "3:4", "4:3", "9:16", "16:9", "9:21", "21:9"]
          default: "16:9"
        model:
          type: string
          description: The model version to use for generation.
          enum: ["photon-1", "photon-flash-1"]
          default: "photon-1"
        image_ref:
          type: array
          description: A list of image references to guide generation.
          items:
            $ref: '#/components/schemas/ImageReference'
        style_ref:
          type: array
          description: Style references for applying a specific artistic style.
          items:
            $ref: '#/components/schemas/ImageReference'
        character_ref:
          type: object
          description: References for consistent character generation.
          properties:
            identity0:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: uri
                    description: URLs of character reference images.
        callback_url:
          type: string
          format: uri
          description: A URL for receiving generation status updates.
      required:
        - prompt

    GenerateVideoRequest:
      type: object
      properties:
        prompt:
          type: string
          description: The description of the scene to generate.
          example: "A futuristic cityscape at sunset with flying cars."
        aspect_ratio:
          type: string
          description: The aspect ratio of the video.
          example: "16:9"
        loop:
          type: boolean
          description: Whether the video should loop continuously.
        keyframes:
          type: object
          description: Keyframes for the video generation.
          properties:
            frame0:
              type: object
              properties:
                type:
                  type: string
                  description: The type of keyframe (e.g., "image").
                  example: "image"
                url:
                  type: string
                  description: The URL of the keyframe image.
        callback_url:
          type: string
          format: uri
          description: A URL for receiving generation status updates.
      required:
        - prompt

    ImageReference:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: URL of the reference image.
        weight:
          type: number
          description: Influence of the reference image (0.0 to 1.0).

    GenerationResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the generation.
        state:
          type: string
          description: The current state of the generation (e.g., "pending", "completed", "failed").
        assets:
          type: object
          properties:
            image:
              type: string
              format: uri
              description: The URL of the generated image.
            video:
              type: string
              format: uri
              description: The URL of the generated video.
        failure_reason:
          type: string
          description: Reason for failure, if any.
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the generation was created.
        model:
          type: string
          description: The model version used for the generation.
        request:
          type: object
          description: The original request parameters used for generation.

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
